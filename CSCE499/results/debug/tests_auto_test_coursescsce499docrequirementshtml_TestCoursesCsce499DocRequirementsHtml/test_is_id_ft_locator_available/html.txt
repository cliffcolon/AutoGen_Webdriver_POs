<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
	<title>CSCE 499 - Requirements Document</title>
	
	<link href="styles.css" type="text/css" rel="stylesheet" />
</head>

<body>

<div id="banner-top">
<div class="logo"></div>
<h1>CSCE 499 Capstone -- 2012-2013</h1>
<div id="nav">
<ul>
<li><a href="index.html">Home</a></li>
<li><a href="syllabus.html">Syllabus</a></li>
<li><a href="schedule.html">Schedule</a></li>
<li><a href="resources.html">Resources</a></li>
</ul>
</div>
</div>

<div id="main-content">
<div id="bd">
			
<h1 id="csce_499__requirements_document">CSCE 499 - Requirements Document</h1>

<p>The purpose of this document is to specify as completely as possible how your product will function and determine the constraints under which your project will be developed and executed. In other words, this document describes the following basic issues:</p>

<ul>
<li>Functionality</li>

<li>Performance</li>

<li>Design constraints</li>

<li>External interfaces</li>
</ul>

<p>This document does <em>not</em> describe the internal workings of your product, but instead describes <em>what</em> it will do (how it will function).<br />In a real-world scenario, you would be directly or indirectly working with a client (your faculty mentor might serve in this role) who completely or partially defines these requirements. In this document you are to lay out in as much detail as possible the functionality of your product, as well as the external constraints that limit your product. You determine this by interacting with your client and asking questions. Ask your faculty mentor to act as a client. Schedule meetings where you interview your faculty mentor, asking questions about the issues described below.</p>

<p>If the document is ambiguous or is missing details then it has not accomplished its purpose. A reader of this document should understand very well how the product will function, but not <em>how</em> to implement it.</p>

<p>In general err on the side of more specification rather than less. However, organize the information so that it is understandable and readable.</p>

<p>Your document should be 5-20 pages (not including title page or bibliography), and follow the <a href="doc-standards.html">CSCE 499 document standards</a>.</p>

<p>At a minimum, your document must include the following sections:</p>

<ul>
<li>
<p><strong>Introduction</strong>: Background on the project. Answer questions like: What need are you trying to fill? What systems are currently used, and how is yours an improvement? Describe any background research that you have done, and cite any sources. For software engineers this is like the Domain Analysis document.</p>
</li>

<li>
<p><strong>Project Description</strong>: Specifically, what problem are you trying to solve? What functionality will you be creating? How will the Client and the rest of us know if this project is a success? Give as much detail as you can at this point. Don’t use generalities like, “We will have a working game.” Explain what, at a minimum, it means to be “working.” Also break down your goals into both functional and learning objectives (these should be sub-sections). Functional objectives are things that you hope to produce, and learning objectives are things that you hope to learn about. For learning objectives, state how we will be able to tell if you have actually successfully accomplished the objective (i.e. how will we know if you learned it?).</p>
</li>

<li>
<p><strong>Development resources</strong>: Describe the resources that will be required for development (books, online sources, etc.). Each must be properly cited and their purpose described in a fair amount of detail.</p>
</li>

<li>
<p><strong>Requirements</strong>: Here you will describe details about <em>what</em> your product will do. This should be specified in detail without going into <em>how</em> the product will be implemented. In other words, you are not describing <em>how</em> the code works, but <em>what</em> the user will expect to interact with.</p>

<p>This should include at least the following (be as specific and thorough as possible, ask your mentor for help):</p>

<ul>
<li><strong>Performance requirements</strong>: Describe the extent to which a function must execute in terms of quality, timeliness, coverage, etc.</li>

<li><strong>Design constraints</strong> What are the constraints on your project in terms of things like memory, platform, development time, budget, hardware, size, etc.<br />These are things that limit your project, generally from the “outside.” They are generally imposed by “environmental” factors such as hardware, users, availability of internet access, etc. Think hard about this, as this is an important part of the requirements process.</li>

<li><strong>User characteristics</strong>: What are your users like? What do they expect? How does that affect your product in terms of the design?</li>

<li><strong>Assumptions</strong> What are you assuming that will be the case about the users, software environment, etc?</li>

<li><strong>Security</strong>: What level of security will your project support? How is this affected by your assumptions, user characteristics, design constraints, etc.? How will the product safeguard your user’s security/privacy?</li>

<li><strong>Reliability</strong>: How reliable should your project be?</li>

<li><strong>Portability</strong>: Does your project need to be portable to different platforms? Justify your answer with specific reasons related to the above.</li>

<li><strong>Maintainablity</strong>: What are the issues with maintainability? How must this be factored into the design process? Justify your answers with specific reasons related to the above.</li>

<li><strong>External interface</strong>: This describes all the interactions of the software with users, hardware and other software. This includes things like <strong>interface sketches</strong>, <strong>file formats</strong>, <strong>device availability</strong>, <strong>database access</strong>, and so on. Nearly all projects should have at least one <strong>interface sketch</strong>.</li>

<li><strong>A use case model</strong>: Use case descriptions and scenarios for the major use cases, or so-called “user stories.” Be sure to include abnormal scenarios in your specifications. You should have experience with this from CSCE 320 (Software Engineering).</li>
</ul>
</li>

<li>
<p><strong>Task Breakdown</strong>: What steps will be necessary to complete the project, with a detailed explanation of each step. This is often best done as an outline, showing major tasks, sub-tasks, sub-sub-tasks, etc. You will describe the steps, and refer back to these in the timetable. Consult with your faculty mentor when laying out the tasks. For hardware projects, consult with your faculty mentor for a model that is appropriate.</p>

<p>Be sure to include preliminary work such as writing a test programs to learn how to do Java networking, use a web framework, use Direct X graphics, etc.</p>
</li>

<li>
<p><strong>Preliminary Timetable</strong>: This must be a Gantt chart that includes all of the tasks outlined in the previous Section. Your schedule should begin as soon as you want, and go through May of next year.</p>
</li>

<li>
<p><strong>Budget</strong>: Itemize what you will need to complete the project including estimated cost and a total. If things are free (e.g. open source software or you have it already) list them anyway. Also indicate what you would like the department to purchase, and what you will be purchasing yourself. Be sure to include research materials like books, CD/DVDs, and the like.</p>
</li>

<li>
<p><strong>Development Documentation</strong>: Your project must have a web site and an associated document archive, as well as a blog for each developer. You must keep all versions and revisions of all documents and code in an archive of some sort. In this section, provide the URL to your web site as well as a thorough description of how to find all of the documentation. Include a link to each developer’s blog, or if a developer wishes to use email instead, indicate that.</p>
</li>

<li>
<p><strong>Annotated Bibliography</strong>: This is a bibliography of the sources of information you have and will use. Each item in the bibliography should have a brief note on the reference describing the contents. In this document it is a preliminary list and it will expand as the project develops.</p>
</li>

<li>
<p><strong>Glossary</strong>: (if necessary) Define all the major terms used in this project. The glossary should be usable by someone who is a junior level CSCE student but not involved in your project.</p>
</li>
</ul>

<p>All documents (not just this one) must be well organized and professional in appearance and content. Correct grammar and spelling is required at all times. Consistency of expression and terminology is also required. Please refer to the <a href="doc-standards.html">CSCE 499 document standards</a> for further information.</p>
</div> <!-- #bd -->

</div> <!-- #main-content -->

<div id="ft"></div>






</body><canvas id="fxdriver-screenshot-canvas" style="display: none;" width="978" height="1548"></canvas></html>